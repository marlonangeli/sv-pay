name: sv-payments

services:
  sv.api:
    container_name: sv.api
    image: sv.pay.api:dev
    build:
      context: api
      dockerfile: SV.Pay.Api/Dockerfile
    ports:
      - "5001:8081"
      - "5000:8080"
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    networks:
      - sv-payments
    depends_on:
      - sqlserver

  sv.web:
    container_name: sv.web
    image: sv.pay.web:dev
    build:
      context: web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    networks:
      - sv-payments
    depends_on:
      - sv.api

  sqlserver:
    container_name: sqlserver
    ports:
      - 1433:1433
    env_file:
      - .env
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQLSERVER_PASSWORD}
      TZ: America/Sao_Paulo
    # image: mcr.microsoft.com/mssql/server   -> amd64
    image: mcr.microsoft.com/azure-sql-edge # -> arm64
    networks:
      - sv-payments
    volumes:
      - sv-sqlserver-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    
networks:
  sv-payments:
    name: sv-payments
    driver: bridge

volumes:
  sv-sqlserver-data:
    name: sv-sqlserver-data